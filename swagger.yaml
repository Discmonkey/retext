openapi: 3.0.3

info:
  title: EMPIRE API
  version: '0.9'

components:
  schemas:

    Code:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        container:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        texts:
          type: array
          items:
            $ref: '#/components/schemas/DocumentText'
      required:
        - name
        - texts
        - container

    CodeContainer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        order:
          type: number
        codes:
          type: array
          items:
            $ref: '#/components/schemas/Code'
        percentage:
          type: float
      required:
        - order
        - codes
        - percentage

    DocumentText:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        document_id:
          $ref: '#/components/schemas/Id'
        text:
          type: string
        first_word:
          $ref: '#/components/schemas/WordCoordinate'
        last_word:
          $ref: '#/components/schemas/WordCoordinate'
      required:
        - document_id
        - text
        - first_word
        - last_word

    Id:
      type: integer
      format: int64
      description: A unique identifier within the class of the specific object it is referencing

    File:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/FileType'
        name:
          type: string
        ext:
          type: string
      required:
        - id
        - type
        - name
        - ext

    Project:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        year:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
      required:
        - year
        - month
        - name
        - description

    WordCoordinate:
      type: object
      properties:
        paragraph:
          type: integer
        sentence:
          type: integer
        word:
          type: integer
      required:
        - paragraph
        - sentence
        - word

    Word:
      type: string

    Sentence:
      type: array
      items:
        $ref: '#/components/schemas/Word'

    Paragraph:
      type: array
      items:
        $ref: '#/components/schemas/Sentence'

    Demo:
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

    Source:
      type: array
      items:
        $ref: '#/components/schemas/Paragraph'

    FileType:
      type: string
      enum:
        - source
        - demo

paths:
  /file:
    post:
      responses:
        200:
          description: successful upload, returns uploaded file
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filetype:
                  $ref: '#/components/schemas/FileType'
                projectId:
                  $ref: '#/components/schemas/Id'
                files:
                  type: array
                  items:
                    type: string
                    format: binary


